openapi: 3.0.0
info:
  version: "1.0"
  title: Bonds Module Extension of Gaia-Lite for Cosmos
  description: An extension of Gaia-Lite for Bonds Module related state queries,
    transaction generation and broadcasting.
tags:
  - name: Bonds Module
    description: A module for universal token bonding curves
paths:
  /bonds:
    get:
      description: List of all currently active bonds
      summary: List of all active bonds
      tags:
        - Bonds Module
      responses:
        "200":
          description: List of bonds by bond DID
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Did"
  /bonds_detailed:
    get:
      description: List of all bonds with information about current state
      summary: List of bonds with info about state
      tags:
        - Bonds Module
      parameters:
        - in: query
          name: height
          description: Block height
          required: false
          example: 5
          schema:
            type: string
      responses:
        "200":
          description: List of bonds with state info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BondsListDetailedQueryResult"
  "/bonds/{bond_did}":
    get:
      description: Information about the bond
      summary: The properties of the bond
      tags:
        - Bonds Module
      parameters:
        - in: path
          name: bond_did
          description: Bond DID
          required: true
          example: did:fury:48PVm1uyF6QVDSPdGRWw4T
          schema:
            type: string
      responses:
        "200":
          description: Bond details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BondQueryResult"
  "/bonds/{bond_did}/batch":
    get:
      description: Bond's current batch with current list of buy and sell orders
      summary: Current orders batch of the bond
      tags:
        - Bonds Module
      parameters:
        - in: path
          name: bond_did
          description: Bond DID
          required: true
          example: did:fury:48PVm1uyF6QVDSPdGRWw4T
          schema:
            type: string
      responses:
        "200":
          description: Current batch
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchQueryResult"
  "/bonds/{bond_did}/last_batch":
    get:
      description: Bond's last batch with last list of buy and sell orders
      summary: Last orders batch of the bond
      tags:
        - Bonds Module
      parameters:
        - in: path
          name: bond_did
          description: Bond DID
          required: true
          example: did:fury:48PVm1uyF6QVDSPdGRWw4T
          schema:
            type: string
      responses:
        "200":
          description: Last batch
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchQueryResult"
  "/bonds/{bond_did}/current_price":
    get:
      description: Computes the current price(s) of the bond
      summary: Current price(s) of the bond
      tags:
        - Bonds Module
      parameters:
        - in: path
          name: bond_did
          description: Bond DID
          required: true
          example: did:fury:48PVm1uyF6QVDSPdGRWw4T
          schema:
            type: string
      responses:
        "200":
          description: Current price(s) of the bond
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResCoins"
  "/bonds/{bond_did}/current_reserve":
    get:
      description: Obtains the reserve pool balance(s) of the bond
      summary: Current balance(s) of the reserve pool
      tags:
        - Bonds Module
      parameters:
        - in: path
          name: bond_did
          description: Bond DID
          required: true
          example: did:fury:48PVm1uyF6QVDSPdGRWw4T
          schema:
            type: string
      responses:
        "200":
          description: Current balance(s) of the reserve pool
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResCoins"
  "/bonds/{bond_did}/price/{bond_amount}":
    get:
      description: Computes the price(s) of the bond at a specific amount of supply
      summary: Price(s) of the bond at a specific supply
      tags:
        - Bonds Module
      parameters:
        - in: path
          name: bond_did
          description: Bond DID
          required: true
          example: did:fury:48PVm1uyF6QVDSPdGRWw4T
          schema:
            type: string
        - in: path
          name: bond_amount
          description: Number of bond tokens
          required: true
          example: 100
          schema:
            type: number
      responses:
        "200":
          description: Price(s) to buy the tokens
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResCoins"
  "/bonds/{bond_did}/buy_price/{bond_amount}":
    get:
      description: Computes the price(s) to buy an amount of tokens of the bond
      summary: Price(s) of buying an amount of tokens of the bond
      tags:
        - Bonds Module
      parameters:
        - in: path
          name: bond_did
          description: Bond DID
          required: true
          example: did:fury:48PVm1uyF6QVDSPdGRWw4T
          schema:
            type: string
        - in: path
          name: bond_amount
          description: Number of bond tokens
          required: true
          example: 100
          schema:
            type: number
      responses:
        "200":
          description: Price(s) to buy the tokens
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuyPriceQueryResult"
  "/bonds/{bond_did}/sell_return/{bond_amount}":
    get:
      description: Computes the return on selling an amount of tokens of the bond
      summary: Return on selling an amount of tokens of the bond
      tags:
        - Bonds Module
      parameters:
        - in: path
          name: bond_did
          description: Bond DID
          required: true
          example: did:fury:48PVm1uyF6QVDSPdGRWw4T
          schema:
            type: string
        - in: path
          name: bond_amount
          description: Number of bond tokens
          required: true
          example: 100
          schema:
            type: number
      responses:
        "200":
          description: Return when selling the tokens
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SellReturnQueryResult"
  "/bonds/{bond_did}/swap_return/{from_token_with_amount}/{to_token}":
    get:
      description: Computes the return on an amount of tokens by swapping
      summary: Return on an amount of tokens by swapping
      tags:
        - Bonds Module
      parameters:
        - in: path
          name: bond_did
          description: Bond DID
          required: true
          example: did:fury:48PVm1uyF6QVDSPdGRWw4T
          schema:
            type: string
        - in: path
          name: from_token_with_amount
          description: Number of reserve tokens
          required: true
          example: 100res1
          schema:
            type: number
        - in: path
          name: to_token
          description: Reserve token
          required: true
          example: res2
          schema:
            type: string
      responses:
        "200":
          description: Return on an amount of tokens by swapping
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SwapReturnQueryResult"
  /bonds/create_bond:
    post:
      description: Create a bond
      summary: Create a bond
      tags:
        - Bonds Module
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BondCreation"
        description: The parameters of the bond and corresponding bonding curve
      responses:
        default:
          description: Default response
  /bonds/edit_bond:
    post:
      description: Edit a bond
      summary: Edit a bond
      tags:
        - Bonds Module
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BondEdit"
        description: The fields to be edited
      responses:
        default:
          description: Default response
  /bonds/set_next_alpha:
    post:
      description: Set an alpha bond's next alpha value
      summary: Set an alpha bond's next alpha value
      tags:
        - Bonds Module
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BondSetNextAlpha"
        description: The next alpha value
      responses:
        default:
          description: Default response
  /bonds/update_bond_state:
    post:
      description: Set a bond's next state
      summary: Set a bond's next state
      tags:
        - Bonds Module
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BondUpdateBondState"
        description: The next bond state
      responses:
        default:
          description: Default response
  /bonds/buy:
    post:
      description: Buy tokens from a bond
      summary: Buy from a bond. In the case of a swapper bond, this adds liquidity.
      tags:
        - Bonds Module
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  $ref: "#/components/schemas/BaseReq"
                bond_token:
                  type: string
                  example: abc
                bond_amount:
                  type: string
                  example: 100
                max_prices:
                  type: string
                  example: 1000res1,1000res2,...
                bond_did:
                  $ref: "#/components/schemas/Did"
                buyer_did:
                  $ref: "#/components/schemas/Did"
        description: Number of tokens to buy and max price
      responses:
        default:
          description: Default response
  /bonds/sell:
    post:
      description: Sell tokens from a bond
      summary: Sell from a bond. In the case of a swapper bond, this adds liquidity.
      tags:
        - Bonds Module
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  $ref: "#/components/schemas/BaseReq"
                bond_token:
                  type: string
                  example: abc
                bond_amount:
                  type: string
                  example: 100
                bond_did:
                  $ref: "#/components/schemas/Did"
                seller_did:
                  $ref: "#/components/schemas/Did"
        description: Number of tokens to sell
      responses:
        default:
          description: Default response
  /bonds/swap:
    post:
      description: Perform a swap between two tokens using a swapper bond
      summary: Swap two tokens
      tags:
        - Bonds Module
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  $ref: "#/components/schemas/BaseReq"
                from_amount:
                  type: string
                  example: 100
                from_token:
                  type: string
                  example: res1
                to_token:
                  type: string
                  example: res2
                bond_did:
                  $ref: "#/components/schemas/Did"
                swapper_did:
                  $ref: "#/components/schemas/Did"
        description: The number of tokens to swap to another token
      responses:
        default:
          description: Default response
  /bonds/make_outcome_payment:
    post:
      description: Make an outcome payment to a bond
      summary: Make outcome payment
      tags:
        - Bonds Module
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  $ref: "#/components/schemas/BaseReq"
                bond_did:
                  $ref: "#/components/schemas/Did"
                amount:
                  type: string
                  example: "1000"
                sender_did:
                  $ref: "#/components/schemas/Did"
        description: The bond token to make the outcome payment to
      responses:
        default:
          description: Default response
  /bonds/withdraw_share:
    post:
      description: As a bond token holder, withdraw the reserve tokens share from a bond in
        SETTLE/FAILED state
      summary: Withdraw share from bond
      tags:
        - Bonds Module
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  $ref: "#/components/schemas/BaseReq"
                bond_did:
                  $ref: "#/components/schemas/Did"
                recipient_did:
                  $ref: "#/components/schemas/Did"
        description: The bond token to withdraw the share from
      responses:
        default:
          description: Default response
servers:
  - url: http://localhost:1317
components:
  schemas:
    Did:
      type: string
      example: did:fury:48PVm1uyF6QVDSPdGRWw4T
    StakeCoin:
      type: object
      properties:
        denom:
          type: string
          example: stake
        amount:
          type: string
          example: 50
    StakeCoins:
      type: array
      items:
        $ref: "#/components/schemas/StakeCoin"
    AnyCoin:
      type: object
      properties:
        denom:
          type: string
          example: abc
        amount:
          type: string
          example: 50
    AnyCoins:
      type: array
      items:
        $ref: "#/components/schemas/AnyCoin"
    ResCoin:
      type: object
      properties:
        denom:
          type: string
          example: res
        amount:
          type: string
          example: 50
    ResCoins:
      type: array
      items:
        $ref: "#/components/schemas/ResCoin"
    BondCoin:
      type: object
      properties:
        denom:
          type: string
          example: bond
        amount:
          type: string
          example: 50
    BondCoins:
      type: array
      items:
        $ref: "#/components/schemas/BondCoin"
    Address:
      type: string
      description: bech32 encoded address
    BaseOrder:
      type: object
      properties:
        sender_did:
          $ref: "#/components/schemas/Did"
        amount:
          $ref: "#/components/schemas/BondCoin"
        cancelled:
          type: boolean
          example: false
        cancel_reason:
          type: string
          example: reason for cancellation
    BaseOrderSwap:
      type: object
      properties:
        sender_did:
          $ref: "#/components/schemas/Did"
        amount:
          $ref: "#/components/schemas/ResCoin"
        cancelled:
          type: string
          example: "false"
        cancel_reason:
          type: string
          example: reason for cancellation
    BuyOrder:
      type: object
      properties:
        base_order:
          $ref: "#/components/schemas/BaseOrder"
        max_prices:
          $ref: "#/components/schemas/ResCoins"
    SellOrder:
      type: object
      properties:
        base_order:
          $ref: "#/components/schemas/BaseOrder"
    SwapOrder:
      type: object
      properties:
        base_order:
          $ref: "#/components/schemas/BaseOrderSwap"
        to_token:
          type: string
          example: res2
    Batch:
      type: object
      properties:
        bond_did:
          $ref: "#/components/schemas/Did"
        blocks_remaining:
          type: number
          example: 2
        next_alpha:
          type: number
          example: 0.5
        total_buy_amount:
          $ref: "#/components/schemas/BondCoin"
        total_sell_amount:
          $ref: "#/components/schemas/BondCoin"
        buy_prices:
          $ref: "#/components/schemas/ResCoins"
        sell_prices:
          $ref: "#/components/schemas/ResCoins"
        buys:
          type: array
          items:
            $ref: "#/components/schemas/BuyOrder"
        sells:
          type: array
          items:
            $ref: "#/components/schemas/SellOrder"
        swaps:
          type: array
          items:
            $ref: "#/components/schemas/SwapOrder"
    BondsListQueryResult:
      type: array
      items:
        $ref: "#/components/schemas/Did"
    BondsListDetailedQueryResult:
      type: array
      items:
        type: object
        properties:
          did:
            $ref: "#/components/schemas/Did"
          spot_price:
            $ref: "#/components/schemas/ResCoins"
          supply:
            $ref: "#/components/schemas/BondCoin"
          reserve:
            $ref: "#/components/schemas/ResCoins"
    BondQueryResult:
      type: object
      properties:
        type:
          type: string
          example: bonds/Bond
        value:
          type: object
          properties:
            token:
              type: string
              example: abc
            name:
              type: string
              example: Some bond
            description:
              type: string
              example: Description about bond.
            creator_did:
              $ref: "#/components/schemas/Did"
            controller_did:
              $ref: "#/components/schemas/Did"
            function_type:
              type: string
              example: power_function
            function_parameters:
              $ref: "#/components/schemas/FunctionParameters"
            reserve_tokens:
              type: array
              items:
                type: string
                example: res1
            tx_fee_percentage:
              type: number
              example: 0.5
            exit_fee_percentage:
              type: number
              example: 1.5
            fee_address:
              $ref: "#/components/schemas/Address"
            max_supply:
              $ref: "#/components/schemas/BondCoin"
            order_quantity_limits:
              $ref: "#/components/schemas/AnyCoins"
            sanity_rate:
              type: number
              example: 12.34
            sanity_margin_percentage:
              type: number
              example: 56.78
            current_supply:
              $ref: "#/components/schemas/BondCoin"
            current_reserve:
              $ref: "#/components/schemas/ResCoins"
            current_outcome_payment_reserve:
              $ref: "#/components/schemas/ResCoins"
            allow_sells:
              type: string
              example: "true"
            alpha_bond:
              type: string
              example: "true"
            batch_blocks:
              type: number
              example: 5
            outcome_payment:
              $ref: "#/components/schemas/AnyCoins"
            state:
              type: string
              example: OPEN
            bond_did:
              $ref: "#/components/schemas/Did"
    BatchQueryResult:
      type: object
      properties:
        type:
          type: string
          example: bonds/Batch
        value:
          $ref: "#/components/schemas/Batch"
    BuyPriceQueryResult:
      type: object
      properties:
        adjusted_supply:
          $ref: "#/components/schemas/ResCoins"
        prices:
          $ref: "#/components/schemas/ResCoins"
        tx_fees:
          $ref: "#/components/schemas/ResCoins"
        total_prices:
          $ref: "#/components/schemas/ResCoins"
        total_fees:
          $ref: "#/components/schemas/ResCoins"
    SellReturnQueryResult:
      type: object
      properties:
        adjusted_supply:
          $ref: "#/components/schemas/ResCoins"
        returns:
          $ref: "#/components/schemas/ResCoins"
        tx_fees:
          $ref: "#/components/schemas/ResCoins"
        exit_fees:
          $ref: "#/components/schemas/ResCoins"
        total_returns:
          $ref: "#/components/schemas/ResCoins"
        total_fees:
          $ref: "#/components/schemas/ResCoins"
    SwapReturnQueryResult:
      type: object
      properties:
        total_returns:
          $ref: "#/components/schemas/ResCoins"
        total_fees:
          $ref: "#/components/schemas/ResCoins"
    BaseReq:
      type: object
      properties:
        from:
          type: string
          example: cosmos1g9ahr6xhht5rmqven628nklxluzyv8z9jqjcmc
          description: Sender address or Keybase name to generate a transaction
        memo:
          type: string
          example: Sent via Cosmos Voyager 🚀
        chain_id:
          type: string
          example: Cosmos-Hub
        account_number:
          type: string
          example: "0"
        sequence:
          type: string
          example: "1"
        gas:
          type: string
          example: "200000"
        gas_adjustment:
          type: string
          example: "1.2"
        fees:
          $ref: "#/components/schemas/StakeCoins"
        simulate:
          type: boolean
          example: false
          description: Estimate gas for a transaction (cannot be used in conjunction with
            generate_only)
    BondCreation:
      type: object
      properties:
        base_req:
          $ref: "#/components/schemas/BaseReq"
        token:
          type: string
          example: abc
        name:
          type: string
          example: Bond Name
        description:
          type: string
          example: Description about bond.
        function_type:
          type: string
          example: power_function
        function_parameters:
          type: string
          example: m:12,n:2,c:100
        reserve_tokens:
          type: string
          example: res1,res2,...
        tx_fee_percentage:
          type: string
          example: "0.5"
        exit_fee_percentage:
          type: string
          example: "1.5"
        fee_address:
          $ref: "#/components/schemas/Address"
        max_supply:
          type: string
          example: 1000abc
        order_quantity_limits:
          type: string
          example: 100abc,200xyz,...
        sanity_rate:
          type: string
          example: "12.34"
        sanity_margin_percentage:
          type: string
          example: "56.78"
        allow_sells:
          type: string
          example: "true"
        alpha_bond:
          type: string
          example: "true"
        batch_blocks:
          type: string
          example: "5"
        outcome_payment:
          type: string
          example: 100abc,200xyz,...
        bond_did:
          $ref: "#/components/schemas/Did"
        creator_did:
          $ref: "#/components/schemas/Did"
        controller_did:
          $ref: "#/components/schemas/Did"
    BondEdit:
      type: object
      properties:
        base_req:
          $ref: "#/components/schemas/BaseReq"
        name:
          type: string
          example: New Bond Name
        description:
          type: string
          example: New description about bond.
        order_quantity_limits:
          type: string
          example: 100abc,200xyz,...
        sanity_rate:
          type: string
          example: "12.34"
        sanity_margin_percentage:
          type: string
          example: "56.78"
        bond_did:
          $ref: "#/components/schemas/Did"
        editor_did:
          $ref: "#/components/schemas/Did"
    BondSetNextAlpha:
      type: object
      properties:
        base_req:
          $ref: "#/components/schemas/BaseReq"
        new_alpha:
          type: string
          example: "12.34"
        bond_did:
          $ref: "#/components/schemas/Did"
        editor_did:
          $ref: "#/components/schemas/Did"
    BondUpdateBondState:
      type: object
      properties:
        base_req:
          $ref: "#/components/schemas/BaseReq"
        new_state:
          type: string
          example: SETTLE
        bond_did:
          $ref: "#/components/schemas/Did"
        editor_did:
          $ref: "#/components/schemas/Did"
    FunctionParameter:
      type: object
      properties:
        param:
          type: string
          example: a
        value:
          type: string
          example: "1.1"
    FunctionParameters:
      type: array
      items:
        $ref: "#/components/schemas/FunctionParameter"
